info:
  name: @project.name@
  version: @project.version@
  description: @project.description@
  environment: ${MPMAPI_environment}
  lastBuild: @build.timestamp@
app:
  name: @project.name@
  version: @project.version@
  description: @project.description@
server:
  port: ${MPMAPI_port}
  connection-timeout: -1
spring:
  datasource:
    url: jdbc:mysql://${MPMAPI_dbhost}/${MPMAPI_dbname}?useSSL=false
    username: ${MPMAPI_dbuser}
    password: ${MPMAPI_dbpass}
    driver-class-name: com.mysql.jdbc.Driver
  jpa:
    show-sql: false
    properties.hibernate.format_sql: false
    database: mysql
  http:
    multipart:
      max-file-size: -1
      max-request-size: -1
logging:
  pattern.console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  level:
    root: INFO
    org:
      springframework: INFO
      hibernate: ERROR

security.basic.enable: false

mpm_api:
  apps:
    mpmjadmin:
      client_id: ${MPMAPI_mpmjadmin_client_id}
      client_secret: ${MPMAPI_mpmjadmin_client_secret}
      grant_type: ${MPMAPI_mpmjadmin_grant_type}
      role: ${MPMAPI_mpmjadmin_role}
    mpmMobile:
      client_id: ${MPMAPI_mpmMobile_client_id}
      client_secret: ${MPMAPI_mpmMobile_client_secret}
      grant_type: ${MPMAPI_mpmMobile_grant_type}
      role: ${MPMAPI_mpmMobile_role}
    mympm:
      sendgrid_api_key: ${SENDGRID_API_KEY}
  cache:
    url:
      all: ${MPMAPI_cache_url_all}
      one: ${MPMAPI_cache_url_one}
    token:
      key: ${MPMAPI_cache_token_key}
      value: ${MPMAPI_cache_token_value}
  aws:
    client_id: ${MPMAPI_aws_client_id}
    client_secret: ${MPMAPI_aws_client_secret}
    s3:
      cc:
        static_bucket: ${MPMAPI_aws_s3_cc_static_bucket}
        bucket: ${MPMAPI_aws_s3_cc_bucket}
      mpm:
        static_bucket: ${MPMAPI_aws_s3_mpm_static_bucket}
        blog_bucket: ${MPMAPI_aws_s3_mpm_blog_bucket}
        mympm_bucket: ${MPMAPI_aws_s3_mpm_mympm_bucket}
        bucket: ${MPMAPI_aws_s3_mpm_bucket}
      mpmjadmin:
        bucket: ${MPMAPI_aws_s3_mpmjadmin_bucket}
